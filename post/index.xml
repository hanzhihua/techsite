<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 一个码农 技术分享</title>
    <link>https://hanzhihua.cn/post/</link>
    <description>Recent content in Posts on 一个码农 技术分享</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>All rights reserved - 2019 沪ICP备19026538号 </copyright>
    <lastBuildDate>Sat, 10 Aug 2019 18:09:05 +0800</lastBuildDate>
    
	<atom:link href="https://hanzhihua.cn/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>服务进程管理脚本</title>
      <link>https://hanzhihua.cn/post/control_shell/</link>
      <pubDate>Sat, 10 Aug 2019 18:09:05 +0800</pubDate>
      
      <guid>https://hanzhihua.cn/post/control_shell/</guid>
      <description>在生成环境中，一般是使用supervisor来管理服务进程（运行在k8s平台上的服务，那就不需要了） 但有的时候，我们可能采用简单的方式处理，</description>
    </item>
    
    <item>
      <title>使用Goreplay来做压测</title>
      <link>https://hanzhihua.cn/post/goreplay1/</link>
      <pubDate>Fri, 09 Aug 2019 16:07:22 +0800</pubDate>
      
      <guid>https://hanzhihua.cn/post/goreplay1/</guid>
      <description>背景 项目要做一个性能测试，希望能最大限度的模拟用户真实请求。 项目特点弱安全性，无用户标识 解决方案 使用goreplay来录制用户请求，来做压测</description>
    </item>
    
    <item>
      <title>WEB端高可用默认玩法</title>
      <link>https://hanzhihua.cn/post/ha/</link>
      <pubDate>Thu, 08 Aug 2019 18:50:43 +0800</pubDate>
      
      <guid>https://hanzhihua.cn/post/ha/</guid>
      <description>WEB服务高可用设计 主要是从以下几个方面去考虑，设计不考虑dns,动静态CDN 架构是slb+keepalived+web服务（针对运维高可用</description>
    </item>
    
    <item>
      <title>血缘分析</title>
      <link>https://hanzhihua.cn/post/table_relate/</link>
      <pubDate>Thu, 08 Aug 2019 12:43:34 +0800</pubDate>
      
      <guid>https://hanzhihua.cn/post/table_relate/</guid>
      <description>数据血缘就是分析数据之间的关系，也就是对元信息进行管理，是数据平台重要组成部分 元信息是指数据平台中存储数据的元信息，就是各种类型表的元信息管</description>
    </item>
    
    <item>
      <title>去zk网络分区容错方案</title>
      <link>https://hanzhihua.cn/post/zkchange/</link>
      <pubDate>Mon, 05 Aug 2019 20:32:50 +0800</pubDate>
      
      <guid>https://hanzhihua.cn/post/zkchange/</guid>
      <description>最近在重构一个DAG系统，遇到一个组件节点通信、及节点发现的问题。 原方案 基本上就是传统的解决方案，服务发现、调用依赖zookeeper 部署图</description>
    </item>
    
    <item>
      <title>对话机器人设计</title>
      <link>https://hanzhihua.cn/post/chatbot/</link>
      <pubDate>Sat, 03 Aug 2019 22:43:59 +0800</pubDate>
      
      <guid>https://hanzhihua.cn/post/chatbot/</guid>
      <description>最近在研究机器人对话场景，里面涉及的内容比较多，主要以工程的角度去简单实现。 使用word2vec(利用hanlp)，以概率论的方式简单实现 支</description>
    </item>
    
  </channel>
</rss>